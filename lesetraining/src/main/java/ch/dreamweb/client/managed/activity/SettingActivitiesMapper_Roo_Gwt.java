// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.

package ch.dreamweb.client.managed.activity;

import ch.dreamweb.client.managed.request.ApplicationRequestFactory;
import ch.dreamweb.client.managed.ui.SettingDetailsView;
import ch.dreamweb.client.managed.ui.SettingEditView;
import ch.dreamweb.client.managed.ui.SettingListView;
import ch.dreamweb.client.managed.ui.SettingMobileDetailsView;
import ch.dreamweb.client.managed.ui.SettingMobileEditView;
import ch.dreamweb.client.proxy.SettingProxy;
import ch.dreamweb.client.request.SettingRequest_Roo_Gwt;
import ch.dreamweb.client.scaffold.ScaffoldApp;
import ch.dreamweb.client.scaffold.place.CreateAndEditProxy;
import ch.dreamweb.client.scaffold.place.FindAndEditProxy;
import ch.dreamweb.client.scaffold.place.ProxyPlace;
import com.google.gwt.activity.shared.Activity;
import com.google.gwt.place.shared.PlaceController;
import com.google.web.bindery.requestfactory.shared.EntityProxyId;
import com.google.web.bindery.requestfactory.shared.RequestContext;

public abstract class SettingActivitiesMapper_Roo_Gwt {

    protected ApplicationRequestFactory requests;

    protected PlaceController placeController;

    protected Activity makeCreateActivity() {
        SettingEditView.instance().setCreating(true);
        final SettingRequest_Roo_Gwt request = requests.settingRequest();
        Activity activity = new CreateAndEditProxy<SettingProxy>(SettingProxy.class, request, ScaffoldApp.isMobile() ? SettingMobileEditView.instance() : SettingEditView.instance(), placeController) {

            @Override
            protected RequestContext createSaveRequest(SettingProxy proxy) {
                request.persist().using(proxy);
                return request;
            }
        };
        return new SettingEditActivityWrapper(requests, ScaffoldApp.isMobile() ? SettingMobileEditView.instance() : SettingEditView.instance(), activity, null);
    }

    @SuppressWarnings("unchecked")
    protected EntityProxyId<ch.dreamweb.client.proxy.SettingProxy> coerceId(ProxyPlace place) {
        return (EntityProxyId<SettingProxy>) place.getProxyId();
    }

    protected Activity makeEditActivity(ProxyPlace place) {
        SettingEditView.instance().setCreating(false);
        EntityProxyId<SettingProxy> proxyId = coerceId(place);
        Activity activity = new FindAndEditProxy<SettingProxy>(proxyId, requests, ScaffoldApp.isMobile() ? SettingMobileEditView.instance() : SettingEditView.instance(), placeController) {

            @Override
            protected RequestContext createSaveRequest(SettingProxy proxy) {
                SettingRequest_Roo_Gwt request = requests.settingRequest();
                request.persist().using(proxy);
                return request;
            }
        };
        return new SettingEditActivityWrapper(requests, ScaffoldApp.isMobile() ? SettingMobileEditView.instance() : SettingEditView.instance(), activity, proxyId);
    }
}
