// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.

package ch.dreamweb.client.managed.ui;

import ch.dreamweb.client.proxy.TestStatisticProxy;
import ch.dreamweb.client.scaffold.place.AbstractProxyListView;
import com.google.gwt.core.client.GWT;
import com.google.gwt.i18n.client.DateTimeFormat;
import com.google.gwt.i18n.client.NumberFormat;
import com.google.gwt.text.client.DateTimeFormatRenderer;
import com.google.gwt.text.shared.AbstractRenderer;
import com.google.gwt.text.shared.Renderer;
import com.google.gwt.uibinder.client.UiBinder;
import com.google.gwt.uibinder.client.UiField;
import com.google.gwt.user.cellview.client.CellTable;
import com.google.gwt.user.cellview.client.HasKeyboardSelectionPolicy.KeyboardSelectionPolicy;
import com.google.gwt.user.cellview.client.TextColumn;
import com.google.gwt.user.client.ui.Button;
import com.google.gwt.user.client.ui.HTMLPanel;
import java.util.HashSet;
import java.util.Set;

public abstract class TestStatisticListView_Roo_Gwt extends AbstractProxyListView<TestStatisticProxy> {

    @UiField
    CellTable<TestStatisticProxy> table;

    protected Set<String> paths = new HashSet<String>();

    public void init() {
        paths.add("id");
        table.addColumn(new TextColumn<TestStatisticProxy>() {

            Renderer<java.lang.Long> renderer = new AbstractRenderer<java.lang.Long>() {

                public String render(java.lang.Long obj) {
                    return obj == null ? "" : String.valueOf(obj);
                }
            };

            @Override
            public String getValue(TestStatisticProxy object) {
                return renderer.render(object.getId());
            }
        }, "Id");
        paths.add("login");
        table.addColumn(new TextColumn<TestStatisticProxy>() {

            Renderer<java.lang.String> renderer = new AbstractRenderer<java.lang.String>() {

                public String render(java.lang.String obj) {
                    return obj == null ? "" : String.valueOf(obj);
                }
            };

            @Override
            public String getValue(TestStatisticProxy object) {
                return renderer.render(object.getLogin());
            }
        }, "Login");
        paths.add("datetime");
        table.addColumn(new TextColumn<TestStatisticProxy>() {

            Renderer<java.util.Date> renderer = new DateTimeFormatRenderer(DateTimeFormat.getFormat(DateTimeFormat.PredefinedFormat.DATE_SHORT));

            @Override
            public String getValue(TestStatisticProxy object) {
                return renderer.render(object.getDatetime());
            }
        }, "Datetime");
        paths.add("test");
        table.addColumn(new TextColumn<TestStatisticProxy>() {

            Renderer<java.lang.Integer> renderer = new AbstractRenderer<java.lang.Integer>() {

                public String render(java.lang.Integer obj) {
                    return obj == null ? "" : String.valueOf(obj);
                }
            };

            @Override
            public String getValue(TestStatisticProxy object) {
                return renderer.render(object.getTest());
            }
        }, "Test");
        paths.add("testround");
        table.addColumn(new TextColumn<TestStatisticProxy>() {

            Renderer<java.lang.Integer> renderer = new AbstractRenderer<java.lang.Integer>() {

                public String render(java.lang.Integer obj) {
                    return obj == null ? "" : String.valueOf(obj);
                }
            };

            @Override
            public String getValue(TestStatisticProxy object) {
                return renderer.render(object.getTestround());
            }
        }, "Testround");
        paths.add("spanscore");
        table.addColumn(new TextColumn<TestStatisticProxy>() {

            Renderer<java.lang.Integer> renderer = new AbstractRenderer<java.lang.Integer>() {

                public String render(java.lang.Integer obj) {
                    return obj == null ? "" : String.valueOf(obj);
                }
            };

            @Override
            public String getValue(TestStatisticProxy object) {
                return renderer.render(object.getSpanscore());
            }
        }, "Spanscore");
        paths.add("trialscore");
        table.addColumn(new TextColumn<TestStatisticProxy>() {

            Renderer<java.lang.Integer> renderer = new AbstractRenderer<java.lang.Integer>() {

                public String render(java.lang.Integer obj) {
                    return obj == null ? "" : String.valueOf(obj);
                }
            };

            @Override
            public String getValue(TestStatisticProxy object) {
                return renderer.render(object.getTrialscore());
            }
        }, "Trialscore");
        paths.add("trialscore_version");
        table.addColumn(new TextColumn<TestStatisticProxy>() {

            Renderer<java.lang.Integer> renderer = new AbstractRenderer<java.lang.Integer>() {

                public String render(java.lang.Integer obj) {
                    return obj == null ? "" : String.valueOf(obj);
                }
            };

            @Override
            public String getValue(TestStatisticProxy object) {
                return renderer.render(object.getTrialscore_version());
            }
        }, "Trialscore_version");
        paths.add("history");
        table.addColumn(new TextColumn<TestStatisticProxy>() {

            Renderer<java.lang.String> renderer = new AbstractRenderer<java.lang.String>() {

                public String render(java.lang.String obj) {
                    return obj == null ? "" : String.valueOf(obj);
                }
            };

            @Override
            public String getValue(TestStatisticProxy object) {
                return renderer.render(object.getHistory());
            }
        }, "History");
        paths.add("version");
        table.addColumn(new TextColumn<TestStatisticProxy>() {

            Renderer<java.lang.Integer> renderer = new AbstractRenderer<java.lang.Integer>() {

                public String render(java.lang.Integer obj) {
                    return obj == null ? "" : String.valueOf(obj);
                }
            };

            @Override
            public String getValue(TestStatisticProxy object) {
                return renderer.render(object.getVersion());
            }
        }, "Version");
    }
}
